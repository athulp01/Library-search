#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0a9 on Thu Nov 23 15:02:08 2017
#

import wx
from bs4 import BeautifulSoup
import requests

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.MAXIMIZE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.searchbox = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_CHARWRAP | wx.TE_WORDWRAP)
        self.search_button = wx.Button(self, wx.ID_ANY, "SEARCH", style=wx.BU_AUTODRAW | wx.BU_EXACTFIT)
        self.button_2 = wx.Button(self, wx.ID_ANY, "CLEAR", style=wx.BU_EXACTFIT)
        self.displaybox = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_CHARWRAP | wx.TE_MULTILINE | wx.TE_WORDWRAP)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.search, self.search_button)
        self.Bind(wx.EVT_BUTTON, self.clear, self.button_2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("NITC Library Searcher")
        self.searchbox.SetMinSize((198, 40))
        self.search_button.SetFont(wx.Font(13, wx.SWISS, wx.NORMAL, wx.BOLD, 0, "Sans"))
        self.button_2.SetFont(wx.Font(13, wx.SWISS, wx.NORMAL, wx.BOLD, 0, "Sans"))
        self.displaybox.SetMinSize((400, 325))
        self.displaybox.SetFont(wx.Font(11, wx.SWISS, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        bitmap_2 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("./nit-logo.jpg", wx.BITMAP_TYPE_ANY), style=wx.BORDER_RAISED | wx.BORDER_SIMPLE | wx.BORDER_STATIC | wx.BORDER_SUNKEN)
        sizer_6.Add(bitmap_2, 0, wx.EXPAND, 0)
        label_1 = wx.StaticText(self, wx.ID_ANY, "SEARCH THE NITC LIBRARY", style=wx.ALIGN_CENTER | wx.ALIGN_LEFT | wx.ALIGN_RIGHT | wx.ST_ELLIPSIZE_END | wx.ST_ELLIPSIZE_MIDDLE | wx.ST_ELLIPSIZE_START | wx.ST_NO_AUTORESIZE)
        label_1.SetFont(wx.Font(16, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, "Tlwg Typist"))
        sizer_6.Add(label_1, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        static_line_1 = wx.StaticLine(self, wx.ID_ANY)
        sizer_6.Add(static_line_1, 0, wx.EXPAND, 0)
        sizer_8.Add(self.searchbox, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_8.Add(self.search_button, 0, wx.EXPAND | wx.TOP, 15)
        sizer_8.Add(self.button_2, 0, wx.EXPAND | wx.TOP, 16)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)
        static_line_2 = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
        sizer_7.Add(static_line_2, 0, wx.EXPAND, 0)
        sizer_7.Add(self.displaybox, 0, wx.ALIGN_RIGHT | wx.EXPAND, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_6)
        self.Layout()
        self.SetSize((594, 449))
        # end wxGlade

    def search(self, event):  # wxGlade: MyFrame.<event_handler>
        var=self.searchbox.GetValue()
        siteurl = "http://124.124.70.124/cgi-bin/koha/opac-search.pl?idx=kw&q="
        self.displaybox.WriteText("Connecting to NITC library server.\n")
        self.displaybox.Refresh()
        url = siteurl + var
        try:
            src = requests.get(url, timeout=60).text
        except ConnectionError:
            self.displaybox.WriteText("There was a problem connecting,please check your network cables")
            sys.exit(0)
        except TimeoutError:
            self.displaybox.WriteText("Connection timed-out")
            sys.exit(0)
        except:
            self.displaybox.WriteText("Unable to connect,please check your network cables.\nAborting")
            sys.exit(0)
        scrap = BeautifulSoup(src, 'lxml')
        i = 1
        for data in scrap.find_all('a',{'xmlns:str':'http://exslt.org/strings'}):
            books = [book for book in data.stripped_strings]
            self.displaybox.WriteText( str(i)+' : '+books[0].strip('/')+books[1]+'\n')
            self.displaybox.Refresh()
            i += 1

    def clear(self, event):  # wxGlade: MyFrame.<event_handler>
        self.displaybox.SetValue('')
        self.searchbox.SetValue('')

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    Nalanda = MyApp(0)
    Nalanda.MainLoop()
